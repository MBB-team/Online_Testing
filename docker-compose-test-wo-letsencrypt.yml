version: "3.7"
services:
  mariadb-docker:
    image: mariadb:10.4.12-bionic
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_STAGING}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./sql:/docker-entrypoint-initdb.d # excute all SQL files in this folder
      - /save/dumps:/tmp/dumps # Save dump
      - ./migration:/migration
    ports: # Enable access to local SQL IDE
      - "53506:3306"
    expose: # Enable access from php image
      - "3306"

  php-docker:
    build: ./docker
    depends_on:
      - mariadb-docker
    environment:
      XDEBUG_CONFIG: remote_host=${DOCKER_IP} remote_port=9000 remote_enable=1 # todo : replace 172.17.1.100 with your docker ip
    volumes:
      - ./src/:/var/www/html/
    ports: # Enable access to local browser
      - "50371:80"
    expose: # Enable access from php image
      - "80"
    stdin_open: true
    tty: true

  # Provides https with Let's encrypt.
  # The image comes with a default nginx setup.
  # https://medium.com/@gardenvariety/easy-https-with-letsencrypt-and-docker-compose-168df411e2d2
  # letsencrypt-docker:
  #   image: linuxserver/letsencrypt:1.4.0-ls115
  #   depends_on:
  #     - php-docker
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./docker/letsencrypt:/config
  #   environment:
  #     - EMAIL=${LETSENCRYPT_EMAIL} # EMAIL is optional, but if present, will be used for certificate-related notifications (registrations, renewals)
  #     - URL=${LETSENCRYPT_URL_STAGING}
  #     - VALIDATION=http
  #     - TZ=Europe/Stockholm
  #     - PUID=993 # When using volumes (-v flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user PUID and group PGID. Use `id username` to find this id.
  #     - PGID=993
  #     - STAGING=false # Set to true to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.
